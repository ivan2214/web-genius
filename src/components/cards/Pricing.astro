---
import { formatAsARS, formatAsUSD } from '@src/libs/formatNumber'

interface Props {
  name: string
  shortDescription: string
  price: {
    ars: number
    usd: number
  }
  options: string[]
  extras?: string[]
}
const { extras, options, name, shortDescription, price } = Astro.props
---

<div class='w-full md:w-1/2 lg:w-1/3 px-4 dark:bg-gray-950'>
  <div
    class='rounded-xl relative z-10 overflow-hidden border border-primary border-opacity-20 shadow-pricing py-10 px-8 sm:p-12 lg:py-10 lg:px-6 xl:p-12 mb-10'
  >
    <span class='text-primary font-bold text-2xl block mb-4'> {name || 'Personal'}</span>
    <h2 class='font-bold dark:text-white mb-5 text-[42px]'>
      {formatAsARS(price.ars) || '$59'}
      <span class='font-light text-lg'>
        {formatAsUSD(price.usd) || '$59'} Usd
      </span>
    </h2>
    <p class='text-base font-light dark:text-white pb-8 mb-8 border-b border-[#F2F2F2]'>
      {shortDescription || 'Perfect for using in a personal website or a client project.'}
    </p>
    <ul class='flex flex-col items-start gap-3'>
      {
        options.map((option) => (
          <li class='list-disc text-base font-light dark:text-gray-100 leading-loose lg:leading-7'>
            {option}
          </li>
        ))
      }
    </ul>
    {
      extras && (
        <div class='flex flex-col items-start gap-5 pt-5 ml-3'>
          <h3 class='dark:text-white text-3xl'>Extras</h3>
          <ul class='flex flex-col gap-5 items-start'>
            {extras?.map((extra) => (
              <li class='list-disc text-base font-light dark:text-gray-100 leading-loose mb-1'>
                {extra}
              </li>
            ))}
          </ul>
        </div>
      )
    }
    <a
      href='javascript:void(0)'
      class='w-full block text-base font-semibold text-primary bg-transparent border border-[#D4DEFF] rounded-md text-center p-4 hover:text-white hover:bg-primary hover:border-primary transition'
    >
      Elegir {name}
    </a>
  </div>
</div>
